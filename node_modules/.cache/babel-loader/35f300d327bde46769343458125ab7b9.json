{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nconst api = process.env.REACT_APP_UNSPLASH_API;\nconst secret = process.env.REACT_APP_UNSPLASH_KEY;\nexport default function useFetchImage(page, searchTerm) {\n  _s();\n\n  const [Images, setImages] = useState([]);\n  const [errors, setErrors] = useState([]);\n  const [isLoading, setisLoading] = useState(false);\n  useEffect(() => {\n    setisLoading(true);\n    const url = searchTerm === null ? 'photos' : 'search/photos';\n    axios.get(`${api}/photos?client_id=${secret}&page=${page}&query=${searchTerm}`).then(res => {\n      setImages([...Images, ...res.data]);\n      setisLoading(false);\n    }).catch(e => {\n      setErrors([\"Unable to fetch images\"]);\n      setisLoading(false);\n    });\n  }, [page]);\n  useEffect(() => {\n    axios.get(`${api}/search/photos?client_id=${secret}&page=${page}&query=${searchTerm}`).then(res => {\n      setImages([...res.data.results]);\n      setisLoading(false);\n    }).catch(e => {\n      setErrors([\"Unable to fetch images\"]);\n      setisLoading(false);\n    });\n  }, [searchTerm]);\n  return [Images, setImages, errors, isLoading];\n}\n\n_s(useFetchImage, \"n09J+lNUtfuJNjaWci16db39FNQ=\");","map":{"version":3,"sources":["D:/React/react-app-exe3/src/utils/hooks/useFetchImage.js"],"names":["axios","React","useEffect","useState","api","process","env","REACT_APP_UNSPLASH_API","secret","REACT_APP_UNSPLASH_KEY","useFetchImage","page","searchTerm","Images","setImages","errors","setErrors","isLoading","setisLoading","url","get","then","res","data","catch","e","results"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAAxB;AACA,MAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAA3B;AACA,eAAe,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,UAA7B,EAAyC;AAAA;;AACpD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACc,SAAD,EAAYC,YAAZ,IAA4Bf,QAAQ,CAAC,KAAD,CAA1C;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMC,GAAG,GAAGP,UAAU,KAAK,IAAf,GAAsB,QAAtB,GAAiC,eAA7C;AACAZ,IAAAA,KAAK,CAACoB,GAAN,CAAW,GAAEhB,GAAI,qBAAoBI,MAAO,SAAQG,IAAK,UAASC,UAAW,EAA7E,EAAgFS,IAAhF,CAAqFC,GAAG,IAAI;AACxFR,MAAAA,SAAS,CAAC,CAAC,GAAGD,MAAJ,EAAY,GAAGS,GAAG,CAACC,IAAnB,CAAD,CAAT;AACAL,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAHD,EAGGM,KAHH,CAGUC,CAAD,IAAO;AACZT,MAAAA,SAAS,CAAC,CAAC,wBAAD,CAAD,CAAT;AACAE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAND;AAOH,GAVQ,EAUN,CAACP,IAAD,CAVM,CAAT;AAWAT,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACoB,GAAN,CAAW,GAAEhB,GAAI,4BAA2BI,MAAO,SAAQG,IAAK,UAASC,UAAW,EAApF,EAAuFS,IAAvF,CAA4FC,GAAG,IAAI;AAC/FR,MAAAA,SAAS,CAAC,CAAC,GAAGQ,GAAG,CAACC,IAAJ,CAASG,OAAb,CAAD,CAAT;AACAR,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAHD,EAGGM,KAHH,CAGUC,CAAD,IAAO;AACZT,MAAAA,SAAS,CAAC,CAAC,wBAAD,CAAD,CAAT;AACAE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAND;AAOH,GARQ,EAQN,CAACN,UAAD,CARM,CAAT;AAUA,SAAO,CAACC,MAAD,EAASC,SAAT,EAAoBC,MAApB,EAA4BE,SAA5B,CAAP;AACH;;GA1BuBP,a","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst api = process.env.REACT_APP_UNSPLASH_API;\r\nconst secret = process.env.REACT_APP_UNSPLASH_KEY;\r\nexport default function useFetchImage(page, searchTerm) {\r\n    const [Images, setImages] = useState([]);\r\n    const [errors, setErrors] = useState([]);\r\n    const [isLoading, setisLoading] = useState(false)\r\n    useEffect(() => {\r\n        setisLoading(true);\r\n        const url = searchTerm === null ? 'photos' : 'search/photos';\r\n        axios.get(`${api}/photos?client_id=${secret}&page=${page}&query=${searchTerm}`).then(res => {\r\n            setImages([...Images, ...res.data]);\r\n            setisLoading(false);\r\n        }).catch((e) => {\r\n            setErrors([\"Unable to fetch images\"]);\r\n            setisLoading(false);\r\n        });\r\n    }, [page]);\r\n    useEffect(() => {\r\n        axios.get(`${api}/search/photos?client_id=${secret}&page=${page}&query=${searchTerm}`).then(res => {\r\n            setImages([...res.data.results]);\r\n            setisLoading(false);\r\n        }).catch((e) => {\r\n            setErrors([\"Unable to fetch images\"]);\r\n            setisLoading(false);\r\n        });\r\n    }, [searchTerm])\r\n\r\n    return [Images, setImages, errors, isLoading];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}