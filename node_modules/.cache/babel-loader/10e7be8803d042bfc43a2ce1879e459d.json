{"ast":null,"code":"let vendor = require('./vendor');\n\nlet Declaration = require('./declaration');\n\nlet Resolution = require('./resolution');\n\nlet Transition = require('./transition');\n\nlet Processor = require('./processor');\n\nlet Supports = require('./supports');\n\nlet Browsers = require('./browsers');\n\nlet Selector = require('./selector');\n\nlet AtRule = require('./at-rule');\n\nlet Value = require('./value');\n\nlet utils = require('./utils');\n\nlet hackFullscreen = require('./hacks/fullscreen');\n\nlet hackPlaceholder = require('./hacks/placeholder');\n\nlet hackPlaceholderShown = require('./hacks/placeholder-shown');\n\nlet hackFlex = require('./hacks/flex');\n\nlet hackOrder = require('./hacks/order');\n\nlet hackFilter = require('./hacks/filter');\n\nlet hackGridEnd = require('./hacks/grid-end');\n\nlet hackAnimation = require('./hacks/animation');\n\nlet hackFlexFlow = require('./hacks/flex-flow');\n\nlet hackFlexGrow = require('./hacks/flex-grow');\n\nlet hackFlexWrap = require('./hacks/flex-wrap');\n\nlet hackGridArea = require('./hacks/grid-area');\n\nlet hackPlaceSelf = require('./hacks/place-self');\n\nlet hackGridStart = require('./hacks/grid-start');\n\nlet hackAlignSelf = require('./hacks/align-self');\n\nlet hackAppearance = require('./hacks/appearance');\n\nlet hackFlexBasis = require('./hacks/flex-basis');\n\nlet hackMaskBorder = require('./hacks/mask-border');\n\nlet hackMaskComposite = require('./hacks/mask-composite');\n\nlet hackAlignItems = require('./hacks/align-items');\n\nlet hackUserSelect = require('./hacks/user-select');\n\nlet hackFlexShrink = require('./hacks/flex-shrink');\n\nlet hackBreakProps = require('./hacks/break-props');\n\nlet hackColorAdjust = require('./hacks/color-adjust');\n\nlet hackWritingMode = require('./hacks/writing-mode');\n\nlet hackBorderImage = require('./hacks/border-image');\n\nlet hackAlignContent = require('./hacks/align-content');\n\nlet hackBorderRadius = require('./hacks/border-radius');\n\nlet hackBlockLogical = require('./hacks/block-logical');\n\nlet hackGridTemplate = require('./hacks/grid-template');\n\nlet hackInlineLogical = require('./hacks/inline-logical');\n\nlet hackGridRowAlign = require('./hacks/grid-row-align');\n\nlet hackTransformDecl = require('./hacks/transform-decl');\n\nlet hackFlexDirection = require('./hacks/flex-direction');\n\nlet hackImageRendering = require('./hacks/image-rendering');\n\nlet hackBackdropFilter = require('./hacks/backdrop-filter');\n\nlet hackBackgroundClip = require('./hacks/background-clip');\n\nlet hackTextDecoration = require('./hacks/text-decoration');\n\nlet hackJustifyContent = require('./hacks/justify-content');\n\nlet hackBackgroundSize = require('./hacks/background-size');\n\nlet hackGridRowColumn = require('./hacks/grid-row-column');\n\nlet hackGridRowsColumns = require('./hacks/grid-rows-columns');\n\nlet hackGridColumnAlign = require('./hacks/grid-column-align');\n\nlet hackOverscrollBehavior = require('./hacks/overscroll-behavior');\n\nlet hackGridTemplateAreas = require('./hacks/grid-template-areas');\n\nlet hackTextEmphasisPosition = require('./hacks/text-emphasis-position');\n\nlet hackTextDecorationSkipInk = require('./hacks/text-decoration-skip-ink');\n\nlet hackGradient = require('./hacks/gradient');\n\nlet hackIntrinsic = require('./hacks/intrinsic');\n\nlet hackPixelated = require('./hacks/pixelated');\n\nlet hackImageSet = require('./hacks/image-set');\n\nlet hackCrossFade = require('./hacks/cross-fade');\n\nlet hackDisplayFlex = require('./hacks/display-flex');\n\nlet hackDisplayGrid = require('./hacks/display-grid');\n\nlet hackFilterValue = require('./hacks/filter-value');\n\nSelector.hack(hackFullscreen);\nSelector.hack(hackPlaceholder);\nSelector.hack(hackPlaceholderShown);\nDeclaration.hack(hackFlex);\nDeclaration.hack(hackOrder);\nDeclaration.hack(hackFilter);\nDeclaration.hack(hackGridEnd);\nDeclaration.hack(hackAnimation);\nDeclaration.hack(hackFlexFlow);\nDeclaration.hack(hackFlexGrow);\nDeclaration.hack(hackFlexWrap);\nDeclaration.hack(hackGridArea);\nDeclaration.hack(hackPlaceSelf);\nDeclaration.hack(hackGridStart);\nDeclaration.hack(hackAlignSelf);\nDeclaration.hack(hackAppearance);\nDeclaration.hack(hackFlexBasis);\nDeclaration.hack(hackMaskBorder);\nDeclaration.hack(hackMaskComposite);\nDeclaration.hack(hackAlignItems);\nDeclaration.hack(hackUserSelect);\nDeclaration.hack(hackFlexShrink);\nDeclaration.hack(hackBreakProps);\nDeclaration.hack(hackColorAdjust);\nDeclaration.hack(hackWritingMode);\nDeclaration.hack(hackBorderImage);\nDeclaration.hack(hackAlignContent);\nDeclaration.hack(hackBorderRadius);\nDeclaration.hack(hackBlockLogical);\nDeclaration.hack(hackGridTemplate);\nDeclaration.hack(hackInlineLogical);\nDeclaration.hack(hackGridRowAlign);\nDeclaration.hack(hackTransformDecl);\nDeclaration.hack(hackFlexDirection);\nDeclaration.hack(hackImageRendering);\nDeclaration.hack(hackBackdropFilter);\nDeclaration.hack(hackBackgroundClip);\nDeclaration.hack(hackTextDecoration);\nDeclaration.hack(hackJustifyContent);\nDeclaration.hack(hackBackgroundSize);\nDeclaration.hack(hackGridRowColumn);\nDeclaration.hack(hackGridRowsColumns);\nDeclaration.hack(hackGridColumnAlign);\nDeclaration.hack(hackOverscrollBehavior);\nDeclaration.hack(hackGridTemplateAreas);\nDeclaration.hack(hackTextEmphasisPosition);\nDeclaration.hack(hackTextDecorationSkipInk);\nValue.hack(hackGradient);\nValue.hack(hackIntrinsic);\nValue.hack(hackPixelated);\nValue.hack(hackImageSet);\nValue.hack(hackCrossFade);\nValue.hack(hackDisplayFlex);\nValue.hack(hackDisplayGrid);\nValue.hack(hackFilterValue);\nlet declsCache = new Map();\n\nclass Prefixes {\n  constructor(data, browsers, options = {}) {\n    this.data = data;\n    this.browsers = browsers;\n    this.options = options;\n    [this.add, this.remove] = this.preprocess(this.select(this.data));\n    this.transition = new Transition(this);\n    this.processor = new Processor(this);\n  }\n  /**\n   * Return clone instance to remove all prefixes\n   */\n\n\n  cleaner() {\n    if (this.cleanerCache) {\n      return this.cleanerCache;\n    }\n\n    if (this.browsers.selected.length) {\n      let empty = new Browsers(this.browsers.data, []);\n      this.cleanerCache = new Prefixes(this.data, empty, this.options);\n    } else {\n      return this;\n    }\n\n    return this.cleanerCache;\n  }\n  /**\n   * Select prefixes from data, which is necessary for selected browsers\n   */\n\n\n  select(list) {\n    let selected = {\n      add: {},\n      remove: {}\n    };\n\n    for (let name in list) {\n      let data = list[name];\n      let add = data.browsers.map(i => {\n        let params = i.split(' ');\n        return {\n          browser: `${params[0]} ${params[1]}`,\n          note: params[2]\n        };\n      });\n      let notes = add.filter(i => i.note).map(i => `${this.browsers.prefix(i.browser)} ${i.note}`);\n      notes = utils.uniq(notes);\n      add = add.filter(i => this.browsers.isSelected(i.browser)).map(i => {\n        let prefix = this.browsers.prefix(i.browser);\n\n        if (i.note) {\n          return `${prefix} ${i.note}`;\n        } else {\n          return prefix;\n        }\n      });\n      add = this.sort(utils.uniq(add));\n\n      if (this.options.flexbox === 'no-2009') {\n        add = add.filter(i => !i.includes('2009'));\n      }\n\n      let all = data.browsers.map(i => this.browsers.prefix(i));\n\n      if (data.mistakes) {\n        all = all.concat(data.mistakes);\n      }\n\n      all = all.concat(notes);\n      all = utils.uniq(all);\n\n      if (add.length) {\n        selected.add[name] = add;\n\n        if (add.length < all.length) {\n          selected.remove[name] = all.filter(i => !add.includes(i));\n        }\n      } else {\n        selected.remove[name] = all;\n      }\n    }\n\n    return selected;\n  }\n  /**\n   * Sort vendor prefixes\n   */\n\n\n  sort(prefixes) {\n    return prefixes.sort((a, b) => {\n      let aLength = utils.removeNote(a).length;\n      let bLength = utils.removeNote(b).length;\n\n      if (aLength === bLength) {\n        return b.length - a.length;\n      } else {\n        return bLength - aLength;\n      }\n    });\n  }\n  /**\n   * Cache prefixes data to fast CSS processing\n   */\n\n\n  preprocess(selected) {\n    let add = {\n      'selectors': [],\n      '@supports': new Supports(Prefixes, this)\n    };\n\n    for (let name in selected.add) {\n      let prefixes = selected.add[name];\n\n      if (name === '@keyframes' || name === '@viewport') {\n        add[name] = new AtRule(name, prefixes, this);\n      } else if (name === '@resolution') {\n        add[name] = new Resolution(name, prefixes, this);\n      } else if (this.data[name].selector) {\n        add.selectors.push(Selector.load(name, prefixes, this));\n      } else {\n        let props = this.data[name].props;\n\n        if (props) {\n          let value = Value.load(name, prefixes, this);\n\n          for (let prop of props) {\n            if (!add[prop]) {\n              add[prop] = {\n                values: []\n              };\n            }\n\n            add[prop].values.push(value);\n          }\n        } else {\n          let values = add[name] && add[name].values || [];\n          add[name] = Declaration.load(name, prefixes, this);\n          add[name].values = values;\n        }\n      }\n    }\n\n    let remove = {\n      selectors: []\n    };\n\n    for (let name in selected.remove) {\n      let prefixes = selected.remove[name];\n\n      if (this.data[name].selector) {\n        let selector = Selector.load(name, prefixes);\n\n        for (let prefix of prefixes) {\n          remove.selectors.push(selector.old(prefix));\n        }\n      } else if (name === '@keyframes' || name === '@viewport') {\n        for (let prefix of prefixes) {\n          let prefixed = `@${prefix}${name.slice(1)}`;\n          remove[prefixed] = {\n            remove: true\n          };\n        }\n      } else if (name === '@resolution') {\n        remove[name] = new Resolution(name, prefixes, this);\n      } else {\n        let props = this.data[name].props;\n\n        if (props) {\n          let value = Value.load(name, [], this);\n\n          for (let prefix of prefixes) {\n            let old = value.old(prefix);\n\n            if (old) {\n              for (let prop of props) {\n                if (!remove[prop]) {\n                  remove[prop] = {};\n                }\n\n                if (!remove[prop].values) {\n                  remove[prop].values = [];\n                }\n\n                remove[prop].values.push(old);\n              }\n            }\n          }\n        } else {\n          for (let p of prefixes) {\n            let olds = this.decl(name).old(name, p);\n\n            if (name === 'align-self') {\n              let a = add[name] && add[name].prefixes;\n\n              if (a) {\n                if (p === '-webkit- 2009' && a.includes('-webkit-')) {\n                  continue;\n                } else if (p === '-webkit-' && a.includes('-webkit- 2009')) {\n                  continue;\n                }\n              }\n            }\n\n            for (let prefixed of olds) {\n              if (!remove[prefixed]) {\n                remove[prefixed] = {};\n              }\n\n              remove[prefixed].remove = true;\n            }\n          }\n        }\n      }\n    }\n\n    return [add, remove];\n  }\n  /**\n   * Declaration loader with caching\n   */\n\n\n  decl(prop) {\n    if (!declsCache.has(prop)) {\n      declsCache.set(prop, Declaration.load(prop));\n    }\n\n    return declsCache.get(prop);\n  }\n  /**\n   * Return unprefixed version of property\n   */\n\n\n  unprefixed(prop) {\n    let value = this.normalize(vendor.unprefixed(prop));\n\n    if (value === 'flex-direction') {\n      value = 'flex-flow';\n    }\n\n    return value;\n  }\n  /**\n   * Normalize prefix for remover\n   */\n\n\n  normalize(prop) {\n    return this.decl(prop).normalize(prop);\n  }\n  /**\n   * Return prefixed version of property\n   */\n\n\n  prefixed(prop, prefix) {\n    prop = vendor.unprefixed(prop);\n    return this.decl(prop).prefixed(prop, prefix);\n  }\n  /**\n   * Return values, which must be prefixed in selected property\n   */\n\n\n  values(type, prop) {\n    let data = this[type];\n    let global = data['*'] && data['*'].values;\n    let values = data[prop] && data[prop].values;\n\n    if (global && values) {\n      return utils.uniq(global.concat(values));\n    } else {\n      return global || values || [];\n    }\n  }\n  /**\n   * Group declaration by unprefixed property to check them\n   */\n\n\n  group(decl) {\n    let rule = decl.parent;\n    let index = rule.index(decl);\n    let {\n      length\n    } = rule.nodes;\n    let unprefixed = this.unprefixed(decl.prop);\n\n    let checker = (step, callback) => {\n      index += step;\n\n      while (index >= 0 && index < length) {\n        let other = rule.nodes[index];\n\n        if (other.type === 'decl') {\n          if (step === -1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break;\n            }\n          }\n\n          if (this.unprefixed(other.prop) !== unprefixed) {\n            break;\n          } else if (callback(other) === true) {\n            return true;\n          }\n\n          if (step === +1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break;\n            }\n          }\n        }\n\n        index += step;\n      }\n\n      return false;\n    };\n\n    return {\n      up(callback) {\n        return checker(-1, callback);\n      },\n\n      down(callback) {\n        return checker(+1, callback);\n      }\n\n    };\n  }\n\n}\n\nmodule.exports = Prefixes;","map":{"version":3,"sources":["D:/React/react-app-exe3/node_modules/autoprefixer/lib/prefixes.js"],"names":["vendor","require","Declaration","Resolution","Transition","Processor","Supports","Browsers","Selector","AtRule","Value","utils","hackFullscreen","hackPlaceholder","hackPlaceholderShown","hackFlex","hackOrder","hackFilter","hackGridEnd","hackAnimation","hackFlexFlow","hackFlexGrow","hackFlexWrap","hackGridArea","hackPlaceSelf","hackGridStart","hackAlignSelf","hackAppearance","hackFlexBasis","hackMaskBorder","hackMaskComposite","hackAlignItems","hackUserSelect","hackFlexShrink","hackBreakProps","hackColorAdjust","hackWritingMode","hackBorderImage","hackAlignContent","hackBorderRadius","hackBlockLogical","hackGridTemplate","hackInlineLogical","hackGridRowAlign","hackTransformDecl","hackFlexDirection","hackImageRendering","hackBackdropFilter","hackBackgroundClip","hackTextDecoration","hackJustifyContent","hackBackgroundSize","hackGridRowColumn","hackGridRowsColumns","hackGridColumnAlign","hackOverscrollBehavior","hackGridTemplateAreas","hackTextEmphasisPosition","hackTextDecorationSkipInk","hackGradient","hackIntrinsic","hackPixelated","hackImageSet","hackCrossFade","hackDisplayFlex","hackDisplayGrid","hackFilterValue","hack","declsCache","Map","Prefixes","constructor","data","browsers","options","add","remove","preprocess","select","transition","processor","cleaner","cleanerCache","selected","length","empty","list","name","map","i","params","split","browser","note","notes","filter","prefix","uniq","isSelected","sort","flexbox","includes","all","mistakes","concat","prefixes","a","b","aLength","removeNote","bLength","selector","selectors","push","load","props","value","prop","values","old","prefixed","slice","p","olds","decl","has","set","get","unprefixed","normalize","type","global","group","rule","parent","index","nodes","checker","step","callback","other","withPrefix","up","down","module","exports"],"mappings":"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","sourcesContent":["let vendor = require('./vendor')\nlet Declaration = require('./declaration')\nlet Resolution = require('./resolution')\nlet Transition = require('./transition')\nlet Processor = require('./processor')\nlet Supports = require('./supports')\nlet Browsers = require('./browsers')\nlet Selector = require('./selector')\nlet AtRule = require('./at-rule')\nlet Value = require('./value')\nlet utils = require('./utils')\nlet hackFullscreen = require('./hacks/fullscreen')\nlet hackPlaceholder = require('./hacks/placeholder')\nlet hackPlaceholderShown = require('./hacks/placeholder-shown')\nlet hackFlex = require('./hacks/flex')\nlet hackOrder = require('./hacks/order')\nlet hackFilter = require('./hacks/filter')\nlet hackGridEnd = require('./hacks/grid-end')\nlet hackAnimation = require('./hacks/animation')\nlet hackFlexFlow = require('./hacks/flex-flow')\nlet hackFlexGrow = require('./hacks/flex-grow')\nlet hackFlexWrap = require('./hacks/flex-wrap')\nlet hackGridArea = require('./hacks/grid-area')\nlet hackPlaceSelf = require('./hacks/place-self')\nlet hackGridStart = require('./hacks/grid-start')\nlet hackAlignSelf = require('./hacks/align-self')\nlet hackAppearance = require('./hacks/appearance')\nlet hackFlexBasis = require('./hacks/flex-basis')\nlet hackMaskBorder = require('./hacks/mask-border')\nlet hackMaskComposite = require('./hacks/mask-composite')\nlet hackAlignItems = require('./hacks/align-items')\nlet hackUserSelect = require('./hacks/user-select')\nlet hackFlexShrink = require('./hacks/flex-shrink')\nlet hackBreakProps = require('./hacks/break-props')\nlet hackColorAdjust = require('./hacks/color-adjust')\nlet hackWritingMode = require('./hacks/writing-mode')\nlet hackBorderImage = require('./hacks/border-image')\nlet hackAlignContent = require('./hacks/align-content')\nlet hackBorderRadius = require('./hacks/border-radius')\nlet hackBlockLogical = require('./hacks/block-logical')\nlet hackGridTemplate = require('./hacks/grid-template')\nlet hackInlineLogical = require('./hacks/inline-logical')\nlet hackGridRowAlign = require('./hacks/grid-row-align')\nlet hackTransformDecl = require('./hacks/transform-decl')\nlet hackFlexDirection = require('./hacks/flex-direction')\nlet hackImageRendering = require('./hacks/image-rendering')\nlet hackBackdropFilter = require('./hacks/backdrop-filter')\nlet hackBackgroundClip = require('./hacks/background-clip')\nlet hackTextDecoration = require('./hacks/text-decoration')\nlet hackJustifyContent = require('./hacks/justify-content')\nlet hackBackgroundSize = require('./hacks/background-size')\nlet hackGridRowColumn = require('./hacks/grid-row-column')\nlet hackGridRowsColumns = require('./hacks/grid-rows-columns')\nlet hackGridColumnAlign = require('./hacks/grid-column-align')\nlet hackOverscrollBehavior = require('./hacks/overscroll-behavior')\nlet hackGridTemplateAreas = require('./hacks/grid-template-areas')\nlet hackTextEmphasisPosition = require('./hacks/text-emphasis-position')\nlet hackTextDecorationSkipInk = require('./hacks/text-decoration-skip-ink')\nlet hackGradient = require('./hacks/gradient')\nlet hackIntrinsic = require('./hacks/intrinsic')\nlet hackPixelated = require('./hacks/pixelated')\nlet hackImageSet = require('./hacks/image-set')\nlet hackCrossFade = require('./hacks/cross-fade')\nlet hackDisplayFlex = require('./hacks/display-flex')\nlet hackDisplayGrid = require('./hacks/display-grid')\nlet hackFilterValue = require('./hacks/filter-value')\n\nSelector.hack(hackFullscreen)\nSelector.hack(hackPlaceholder)\nSelector.hack(hackPlaceholderShown)\nDeclaration.hack(hackFlex)\nDeclaration.hack(hackOrder)\nDeclaration.hack(hackFilter)\nDeclaration.hack(hackGridEnd)\nDeclaration.hack(hackAnimation)\nDeclaration.hack(hackFlexFlow)\nDeclaration.hack(hackFlexGrow)\nDeclaration.hack(hackFlexWrap)\nDeclaration.hack(hackGridArea)\nDeclaration.hack(hackPlaceSelf)\nDeclaration.hack(hackGridStart)\nDeclaration.hack(hackAlignSelf)\nDeclaration.hack(hackAppearance)\nDeclaration.hack(hackFlexBasis)\nDeclaration.hack(hackMaskBorder)\nDeclaration.hack(hackMaskComposite)\nDeclaration.hack(hackAlignItems)\nDeclaration.hack(hackUserSelect)\nDeclaration.hack(hackFlexShrink)\nDeclaration.hack(hackBreakProps)\nDeclaration.hack(hackColorAdjust)\nDeclaration.hack(hackWritingMode)\nDeclaration.hack(hackBorderImage)\nDeclaration.hack(hackAlignContent)\nDeclaration.hack(hackBorderRadius)\nDeclaration.hack(hackBlockLogical)\nDeclaration.hack(hackGridTemplate)\nDeclaration.hack(hackInlineLogical)\nDeclaration.hack(hackGridRowAlign)\nDeclaration.hack(hackTransformDecl)\nDeclaration.hack(hackFlexDirection)\nDeclaration.hack(hackImageRendering)\nDeclaration.hack(hackBackdropFilter)\nDeclaration.hack(hackBackgroundClip)\nDeclaration.hack(hackTextDecoration)\nDeclaration.hack(hackJustifyContent)\nDeclaration.hack(hackBackgroundSize)\nDeclaration.hack(hackGridRowColumn)\nDeclaration.hack(hackGridRowsColumns)\nDeclaration.hack(hackGridColumnAlign)\nDeclaration.hack(hackOverscrollBehavior)\nDeclaration.hack(hackGridTemplateAreas)\nDeclaration.hack(hackTextEmphasisPosition)\nDeclaration.hack(hackTextDecorationSkipInk)\nValue.hack(hackGradient)\nValue.hack(hackIntrinsic)\nValue.hack(hackPixelated)\nValue.hack(hackImageSet)\nValue.hack(hackCrossFade)\nValue.hack(hackDisplayFlex)\nValue.hack(hackDisplayGrid)\nValue.hack(hackFilterValue)\n\nlet declsCache = new Map()\n\nclass Prefixes {\n  constructor(data, browsers, options = {}) {\n    this.data = data\n    this.browsers = browsers\n    this.options = options\n    ;[this.add, this.remove] = this.preprocess(this.select(this.data))\n    this.transition = new Transition(this)\n    this.processor = new Processor(this)\n  }\n\n  /**\n   * Return clone instance to remove all prefixes\n   */\n  cleaner() {\n    if (this.cleanerCache) {\n      return this.cleanerCache\n    }\n\n    if (this.browsers.selected.length) {\n      let empty = new Browsers(this.browsers.data, [])\n      this.cleanerCache = new Prefixes(this.data, empty, this.options)\n    } else {\n      return this\n    }\n\n    return this.cleanerCache\n  }\n\n  /**\n   * Select prefixes from data, which is necessary for selected browsers\n   */\n  select(list) {\n    let selected = { add: {}, remove: {} }\n\n    for (let name in list) {\n      let data = list[name]\n      let add = data.browsers.map(i => {\n        let params = i.split(' ')\n        return {\n          browser: `${params[0]} ${params[1]}`,\n          note: params[2]\n        }\n      })\n\n      let notes = add\n        .filter(i => i.note)\n        .map(i => `${this.browsers.prefix(i.browser)} ${i.note}`)\n      notes = utils.uniq(notes)\n\n      add = add\n        .filter(i => this.browsers.isSelected(i.browser))\n        .map(i => {\n          let prefix = this.browsers.prefix(i.browser)\n          if (i.note) {\n            return `${prefix} ${i.note}`\n          } else {\n            return prefix\n          }\n        })\n      add = this.sort(utils.uniq(add))\n\n      if (this.options.flexbox === 'no-2009') {\n        add = add.filter(i => !i.includes('2009'))\n      }\n\n      let all = data.browsers.map(i => this.browsers.prefix(i))\n      if (data.mistakes) {\n        all = all.concat(data.mistakes)\n      }\n      all = all.concat(notes)\n      all = utils.uniq(all)\n\n      if (add.length) {\n        selected.add[name] = add\n        if (add.length < all.length) {\n          selected.remove[name] = all.filter(i => !add.includes(i))\n        }\n      } else {\n        selected.remove[name] = all\n      }\n    }\n\n    return selected\n  }\n\n  /**\n   * Sort vendor prefixes\n   */\n  sort(prefixes) {\n    return prefixes.sort((a, b) => {\n      let aLength = utils.removeNote(a).length\n      let bLength = utils.removeNote(b).length\n\n      if (aLength === bLength) {\n        return b.length - a.length\n      } else {\n        return bLength - aLength\n      }\n    })\n  }\n\n  /**\n   * Cache prefixes data to fast CSS processing\n   */\n  preprocess(selected) {\n    let add = {\n      'selectors': [],\n      '@supports': new Supports(Prefixes, this)\n    }\n    for (let name in selected.add) {\n      let prefixes = selected.add[name]\n      if (name === '@keyframes' || name === '@viewport') {\n        add[name] = new AtRule(name, prefixes, this)\n      } else if (name === '@resolution') {\n        add[name] = new Resolution(name, prefixes, this)\n      } else if (this.data[name].selector) {\n        add.selectors.push(Selector.load(name, prefixes, this))\n      } else {\n        let props = this.data[name].props\n\n        if (props) {\n          let value = Value.load(name, prefixes, this)\n          for (let prop of props) {\n            if (!add[prop]) {\n              add[prop] = { values: [] }\n            }\n            add[prop].values.push(value)\n          }\n        } else {\n          let values = (add[name] && add[name].values) || []\n          add[name] = Declaration.load(name, prefixes, this)\n          add[name].values = values\n        }\n      }\n    }\n\n    let remove = { selectors: [] }\n    for (let name in selected.remove) {\n      let prefixes = selected.remove[name]\n      if (this.data[name].selector) {\n        let selector = Selector.load(name, prefixes)\n        for (let prefix of prefixes) {\n          remove.selectors.push(selector.old(prefix))\n        }\n      } else if (name === '@keyframes' || name === '@viewport') {\n        for (let prefix of prefixes) {\n          let prefixed = `@${prefix}${name.slice(1)}`\n          remove[prefixed] = { remove: true }\n        }\n      } else if (name === '@resolution') {\n        remove[name] = new Resolution(name, prefixes, this)\n      } else {\n        let props = this.data[name].props\n        if (props) {\n          let value = Value.load(name, [], this)\n          for (let prefix of prefixes) {\n            let old = value.old(prefix)\n            if (old) {\n              for (let prop of props) {\n                if (!remove[prop]) {\n                  remove[prop] = {}\n                }\n                if (!remove[prop].values) {\n                  remove[prop].values = []\n                }\n                remove[prop].values.push(old)\n              }\n            }\n          }\n        } else {\n          for (let p of prefixes) {\n            let olds = this.decl(name).old(name, p)\n            if (name === 'align-self') {\n              let a = add[name] && add[name].prefixes\n              if (a) {\n                if (p === '-webkit- 2009' && a.includes('-webkit-')) {\n                  continue\n                } else if (p === '-webkit-' && a.includes('-webkit- 2009')) {\n                  continue\n                }\n              }\n            }\n            for (let prefixed of olds) {\n              if (!remove[prefixed]) {\n                remove[prefixed] = {}\n              }\n              remove[prefixed].remove = true\n            }\n          }\n        }\n      }\n    }\n\n    return [add, remove]\n  }\n\n  /**\n   * Declaration loader with caching\n   */\n  decl(prop) {\n    if (!declsCache.has(prop)) {\n      declsCache.set(prop, Declaration.load(prop))\n    }\n\n    return declsCache.get(prop)\n  }\n\n  /**\n   * Return unprefixed version of property\n   */\n  unprefixed(prop) {\n    let value = this.normalize(vendor.unprefixed(prop))\n    if (value === 'flex-direction') {\n      value = 'flex-flow'\n    }\n    return value\n  }\n\n  /**\n   * Normalize prefix for remover\n   */\n  normalize(prop) {\n    return this.decl(prop).normalize(prop)\n  }\n\n  /**\n   * Return prefixed version of property\n   */\n  prefixed(prop, prefix) {\n    prop = vendor.unprefixed(prop)\n    return this.decl(prop).prefixed(prop, prefix)\n  }\n\n  /**\n   * Return values, which must be prefixed in selected property\n   */\n  values(type, prop) {\n    let data = this[type]\n\n    let global = data['*'] && data['*'].values\n    let values = data[prop] && data[prop].values\n\n    if (global && values) {\n      return utils.uniq(global.concat(values))\n    } else {\n      return global || values || []\n    }\n  }\n\n  /**\n   * Group declaration by unprefixed property to check them\n   */\n  group(decl) {\n    let rule = decl.parent\n    let index = rule.index(decl)\n    let { length } = rule.nodes\n    let unprefixed = this.unprefixed(decl.prop)\n\n    let checker = (step, callback) => {\n      index += step\n      while (index >= 0 && index < length) {\n        let other = rule.nodes[index]\n        if (other.type === 'decl') {\n          if (step === -1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break\n            }\n          }\n\n          if (this.unprefixed(other.prop) !== unprefixed) {\n            break\n          } else if (callback(other) === true) {\n            return true\n          }\n\n          if (step === +1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break\n            }\n          }\n        }\n\n        index += step\n      }\n      return false\n    }\n\n    return {\n      up(callback) {\n        return checker(-1, callback)\n      },\n      down(callback) {\n        return checker(+1, callback)\n      }\n    }\n  }\n}\n\nmodule.exports = Prefixes\n"]},"metadata":{},"sourceType":"script"}