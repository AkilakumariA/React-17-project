{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\react-app-exe3\\\\src\\\\page\\\\Tensorflow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Tensorflow() {\n  _s();\n\n  const mobilenet = require('@tensorflow-models/mobilenet');\n\n  const imageRef = useRef();\n  useEffect(() => {\n    const img = imageRef.current; // Load the model.\n\n    mobilenet.load().then(model => {\n      // Classify the image.\n      model.classify(img).then(predictions => {\n        console.log('Predictions: ');\n        console.log(predictions);\n      });\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TensorFlow Example\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"\",\n      alt: \"\",\n      ref: imageRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Tensorflow, \"3T/yN0nIkleFGEHXbliPPtj7XAw=\");\n\n_c = Tensorflow;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tensorflow\");","map":{"version":3,"sources":["D:/React/react-app-exe3/src/page/Tensorflow.js"],"names":["React","useEffect","useRef","Tensorflow","mobilenet","require","imageRef","img","current","load","then","model","classify","predictions","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;;AAGA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAMC,SAAS,GAAGC,OAAO,CAAC,8BAAD,CAAzB;;AACA,QAAMC,QAAQ,GAAGJ,MAAM,EAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMM,GAAG,GAAGD,QAAQ,CAACE,OAArB,CADY,CAEZ;;AACAJ,IAAAA,SAAS,CAACK,IAAV,GAAiBC,IAAjB,CAAsBC,KAAK,IAAI;AAC3B;AACAA,MAAAA,KAAK,CAACC,QAAN,CAAeL,GAAf,EAAoBG,IAApB,CAAyBG,WAAW,IAAI;AACpCC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYF,WAAZ;AACH,OAHD;AAIH,KAND;AAOH,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,GAAG,EAAC,EAAT;AAAY,MAAA,GAAG,EAAC,EAAhB;AAAmB,MAAA,GAAG,EAAEP;AAAxB;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAtBuBH,U;;KAAAA,U","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\n\r\nexport default function Tensorflow() {\r\n    const mobilenet = require('@tensorflow-models/mobilenet');\r\n    const imageRef = useRef();\r\n\r\n    useEffect(() => {\r\n        const img = imageRef.current;\r\n        // Load the model.\r\n        mobilenet.load().then(model => {\r\n            // Classify the image.\r\n            model.classify(img).then(predictions => {\r\n                console.log('Predictions: ');\r\n                console.log(predictions);\r\n            });\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>TensorFlow Example</h1>\r\n            <img src='' alt='' ref={imageRef} />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}