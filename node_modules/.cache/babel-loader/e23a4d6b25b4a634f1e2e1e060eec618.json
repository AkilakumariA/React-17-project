{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import { data } from 'autoprefixer';\nimport axios from 'axios';\nimport React, { useEffect, useState } from 'react';\nconst url = process.env.REACT_APP_UNSPLASH_URL;\nconst secret = process.env.REACT_APP_UNSPLASH_KEY;\nexport default function useFetchImage(page) {\n  _s();\n\n  const [Images, setImages] = useState([]);\n  useEffect(() => {\n    axios.get(`${url}?client_id=${secret}&page=${page}`).then(res => {\n      setImages([...data, ...res.data]);\n    });\n  }, [page]);\n  return [Images, setImages];\n}\n\n_s(useFetchImage, \"oRa/eD8IRMtsi1bWKmUNxrxgZ6s=\");","map":{"version":3,"sources":["D:/React/react-app-exe3/src/utils/hooks/useFetchImage.js"],"names":["axios","React","useEffect","useState","url","process","env","REACT_APP_UNSPLASH_URL","secret","REACT_APP_UNSPLASH_KEY","useFetchImage","page","Images","setImages","get","then","res","data"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAAxB;AACA,MAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAA3B;AACA,eAAe,SAASC,aAAT,CAAuBC,IAAvB,EAA6B;AAAA;;AACxC,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZF,IAAAA,KAAK,CAACc,GAAN,CAAW,GAAEV,GAAI,cAAaI,MAAO,SAAQG,IAAK,EAAlD,EAAqDI,IAArD,CAA0DC,GAAG,IAAI;AAC7DH,MAAAA,SAAS,CAAC,CAAC,GAAGI,IAAJ,EAAU,GAAGD,GAAG,CAACC,IAAjB,CAAD,CAAT;AACH,KAFD;AAGH,GAJQ,EAIN,CAACN,IAAD,CAJM,CAAT;AAMA,SAAO,CAACC,MAAD,EAASC,SAAT,CAAP;AACH;;GATuBH,a","sourcesContent":["// import { data } from 'autoprefixer';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst url = process.env.REACT_APP_UNSPLASH_URL;\r\nconst secret = process.env.REACT_APP_UNSPLASH_KEY;\r\nexport default function useFetchImage(page) {\r\n    const [Images, setImages] = useState([]);\r\n    useEffect(() => {\r\n        axios.get(`${url}?client_id=${secret}&page=${page}`).then(res => {\r\n            setImages([...data, ...res.data]);\r\n        });\r\n    }, [page])\r\n\r\n    return [Images, setImages];\r\n}\r\n"]},"metadata":{},"sourceType":"module"}